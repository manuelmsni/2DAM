/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package com.mycompany.hibernateautogenerated.controller;

import com.mycompany.hibernateautogenerated.model.Book;
import com.mycompany.hibernateautogenerated.model.Person;
import com.mycompany.hibernateautogenerated.controller.BookJpaController;
import com.mycompany.hibernateautogenerated.controller.exceptions.NonexistentEntityException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author manuelmsni
 */
public class MainController {
    
    public static void addBook(Book b){
        BookJpaController.getInstance().create(b);
    }
    
    public static void addPerson(Person p){
        PersonJpaController.getInstance().create(p);
    }
    
    public static List<Book> getAllBooks(){
        return BookJpaController.getInstance().findBookEntities();
    }
    
    public static List<Person> getAllPersons(){
        return PersonJpaController.getInstance().findPersonEntities();
    }
    
    public static Book getLibro(int id){
        return BookJpaController.getInstance().findBook(id);
    }
    
    public static Person getPerson(int id){
        return PersonJpaController.getInstance().findPerson(id);
    }
    
    public static void editBook(Book b){
        try {
            BookJpaController.getInstance().edit(b);
        } catch (Exception ex) {
            Logger.getLogger(MainController.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public static void editPerson(Person p){
        try {
            PersonJpaController.getInstance().edit(p);
        } catch (Exception ex) {
            Logger.getLogger(MainController.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public static void deleteBook(int id){
        try {
            BookJpaController.getInstance().destroy(id);
        } catch (NonexistentEntityException ex) {
            Logger.getLogger(MainController.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public static void deletePerson(int id){
        try {
            PersonJpaController.getInstance().destroy(id);
        } catch (NonexistentEntityException ex) {
            Logger.getLogger(MainController.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
}
