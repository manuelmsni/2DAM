/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.multihilos;

import java.util.List;
import java.util.ArrayList;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JProgressBar;

/**
 *
 * @author manuelmsni
 */
public class Ej8 extends javax.swing.JFrame {

    /**
     * Creates new form Ej8
     */
    public Ej8() {
        this.random = new Random();
        this.lock = new Object();
        initComponents();
        
        CarreraProgressBar cpb = new CarreraProgressBar();
        cpb.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pb1 = new javax.swing.JProgressBar();
        pb3 = new javax.swing.JProgressBar();
        pb2 = new javax.swing.JProgressBar();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel2.setText("ProgressBar 2:");

        jLabel1.setText("ProgressBar 1:");

        jLabel3.setText("ProgressBar 3:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(pb2, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(pb3, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(pb1, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(25, 25, 25))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(5, 5, 5)
                .addComponent(pb1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pb2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pb3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ej8.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ej8.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ej8.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ej8.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ej8().setVisible(true);
            }
        });
    }
    
    public class CarreraProgressBar extends Thread {
        private List<IncrementaProgressBar> hilos;

        public CarreraProgressBar() {
            hilos = new ArrayList<>();
        }

        public void run() {
            hilos.add(new IncrementaProgressBar(pb1, jLabel1, 1, this));
            hilos.add(new IncrementaProgressBar(pb2, jLabel2, 2, this));
            hilos.add(new IncrementaProgressBar(pb3, jLabel3, 3, this));

            hilos.forEach(Thread::start);
        }

        public synchronized void gana(int num) {
            hilos.forEach(h -> {
                if (h.getNumero() != num) {
                    h.interrupt();  // Interrumpe el hilo que no ha ganado
                } else {
                    System.out.println("Ha ganado el ProgressBar " + h.getNumero() + "!");
                }
            });
        }
    }
    
    public class IncrementaProgressBar extends Thread{
        private JProgressBar pb;
        private JLabel l;
        private int num;
        private CarreraProgressBar carrera;
        private boolean paused;
        
        public IncrementaProgressBar(JProgressBar pb, JLabel l, int num, CarreraProgressBar carrera){
            this.pb = pb;
            this.num = num;
            this.l = l;
            this.carrera = carrera;
        }
        
        @Override
        public void run() {
            while (pb.getValue() < 100 && !isInterrupted() && !paused) {
                pb.setValue(pb.getValue() + random.nextInt(10) + 1);
                l.setText("ProgressBar " + num + ": " + pb.getValue() + "%");
                try {
                    Thread.sleep(random.nextInt(200) + 1);
                } catch (InterruptedException e) {
                    // Restaura la interrupciÃ³n si se recibe una InterruptedException
                    Thread.currentThread().interrupt();
                }
            }
            System.out.println("El hilo " + num + " ha terminado!");
            carrera.gana(num);
        }

        public int getNumero(){
            return num;
        }
        
    }
    
    private Random random;
    private Object lock;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JProgressBar pb1;
    private javax.swing.JProgressBar pb2;
    private javax.swing.JProgressBar pb3;
    // End of variables declaration//GEN-END:variables
}
