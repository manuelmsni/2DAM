/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.multihilos;

import java.awt.Color;

/**
 *
 * @author Vespertino
 */
public class Ej4 extends javax.swing.JFrame {

    public static long sec;
    /**
     * Creates new form Ej4
     */
    public Ej4(long sec) {
        this.sec = sec;
        setDefaultCloseOperation(this.DISPOSE_ON_CLOSE);
        initComponents();
        initChronos(sec);
    }
    
    public void initChronos(long sec){
        var c1 = new Chronos(sec);
        c1.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ChronoLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setLocation(new java.awt.Point(0, 0));
        setMinimumSize(new java.awt.Dimension(100, 80));
        getContentPane().setLayout(new java.awt.FlowLayout());
        getContentPane().add(ChronoLabel);
        ChronoLabel.getAccessibleContext().setAccessibleName("ChronoLabel");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ej4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ej4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ej4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ej4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ej4(sec).setVisible(true);
            }
        });
        
        
    }
    
    public class Chronos extends Thread{
        private Object lock;
        public long sec;
        public Chronos(long sec){
            this.sec = sec;
        }
        public void run(){
            while(sec>=0){
                try {
                    sleep(1000);
                    ChronoLabel.setText(getFormatClock());
                } catch (InterruptedException ex) {
                    System.out.println("Chronos was interrupted!");
                }
                sec--;
            }
            ChronoLabel.setForeground(Color.RED);
        }
        public String getFormatClock(){
            return formatearTiempo(sec);
        }
        
        public static String formatearTiempo(long segundosTotales) {
            long dias = segundosTotales / (24 * 3600);
            long horas = (segundosTotales % (24 * 3600)) / 3600;
            long minutos = ((segundosTotales % (24 * 3600)) % 3600) / 60;
            long segundos = ((segundosTotales % (24 * 3600)) % 3600) % 60;

            return String.format("%dd %dh %dm %ds", dias, horas, minutos, segundos);
        }
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ChronoLabel;
    // End of variables declaration//GEN-END:variables
}
